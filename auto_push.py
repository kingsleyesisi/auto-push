#!/usr/bin/env python3
import os, time, subprocess
from datetime import datetime

# ─── CONFIGURATION ────────────────────────────────────────────────────────────

# In Actions this is the repo root
REPO_DIR      = "."         
TARGET_FILE   = "file.txt"
BRANCH        = "main"
REMOTE        = "origin"
COMMIT_PREFIX = "Automated update"

# ─── END CONFIGURATION ────────────────────────────────────────────────────────

COUNT = 0
def counter():
    global COUNT; COUNT += 1; return COUNT

def run_cmd(cmd, **kw):
    print(">"," ".join(cmd)); subprocess.run(cmd, check=True, **kw)

def configure_git_identity():
    run_cmd(["git", "config", "--global", "user.name",  "github-actions[bot]"])
    run_cmd(["git", "config", "--global", "user.email", "41898282+github-actions[bot]@users.noreply.github.com"])

def setup_remote_with_token():
    token = os.getenv("GITHUB_TOKEN")
    if not token:
        raise RuntimeError("❌ GITHUB_TOKEN not set")
    slug = "kingsleyesisi/auto-push"
    url  = f"https://x-access-token:{token}@github.com/{slug}.git"
    run_cmd(["git", "remote", "set-url", REMOTE, url])

def modify_file():
    path = os.path.join(REPO_DIR, TARGET_FILE)
    now  = datetime.utcnow().strftime("%Y-%m-%d %H:%M:%SZ")
    with open(path, "a") as f:
        f.write(f"No.{counter()} autogenerated line. Updated at {now}\n")

def commit_and_push():
    run_cmd(["git", "add", TARGET_FILE], cwd=REPO_DIR)
    msg = f"{COMMIT_PREFIX} {datetime.utcnow().strftime('%Y-%m-%d %H:%M:%SZ')}"
    run_cmd(["git", "commit", "-m", msg], cwd=REPO_DIR)
    run_cmd(["git", "push", REMOTE, BRANCH], cwd=REPO_DIR)

def main_loop():
    configure_git_identity()
    os.chdir(REPO_DIR)
    setup_remote_with_token()
    print("✅ Repo ready, starting loop…")
    while True:
        try:
            modify_file()
            commit_and_push()
            print(f"[{datetime.now().isoformat()}] ✔️ Pushed update #{COUNT}")
        except Exception as e:
            print("⚠️", e)
        time.sleep(2*60)

if __name__ == "__main__":
    main_loop()
